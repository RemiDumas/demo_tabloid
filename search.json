[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Démo du package Tabloid",
    "section": "",
    "text": "Accueil\nSupport pour la démo du package tabloid (durée 1h30)",
    "crumbs": [
      "Accueil"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Le package Tabloid",
    "section": "",
    "text": "Fonctionnalités\nCe package (Fontaine et Cretin (2024)) propose un ensemble de fonctions consistantes qui simplifient la création de tableaux statistiques. Il est développé par Laurette Crétin et Maelle Fontaine.",
    "crumbs": [
      "Le package Tabloid"
    ]
  },
  {
    "objectID": "intro.html#fonctionnalités",
    "href": "intro.html#fonctionnalités",
    "title": "Le package Tabloid",
    "section": "",
    "text": "Créer un tableau à partir de n’importe quel croisement et n’importe quelle statistique pondérée ou pas.\nCalculer les marges\nAfficher les profils lignes ou colonnes\nMasquer des cellules\nAvertir si les effectifs sont peu nombreux\nExporter au format xlsx ou html",
    "crumbs": [
      "Le package Tabloid"
    ]
  },
  {
    "objectID": "intro.html#installation",
    "href": "intro.html#installation",
    "title": "Le package Tabloid",
    "section": "Installation",
    "text": "Installation\nLa procédure d’installation dépend de l’environnement dans lequel se trouve R\n1️⃣ Accès à internet: depuis Github\n# install.packages(\"remotes\")\nremotes::install_github(\"inseefrlab/tabloid\",\n                     dependencies = TRUE)\n                     \n2️⃣ __Pas d’accès à internet (AUS, LS3…): depuis un Gitlab interne :\n# install.packages(\"remotes\")\nremotes::install_git(\"https://gitlab.insee.fr/espace-charges-etudes/boite-outils/tableaux\",\n                     dependencies = TRUE)",
    "crumbs": [
      "Le package Tabloid"
    ]
  },
  {
    "objectID": "intro.html#les-données-utilisées",
    "href": "intro.html#les-données-utilisées",
    "title": "Le package Tabloid",
    "section": "Les données utilisées",
    "text": "Les données utilisées\nLe package est accompagné d’un extrait de la base des prénoms. Les exemples contenus dans la vignette du package sont construits en utilisant ce jeu de données.\nPour avoir un ensemble d’exemples supplémentaires, nous allons utiliser:\n\ngrandile\ngapminder",
    "crumbs": [
      "Le package Tabloid"
    ]
  },
  {
    "objectID": "intro.html#résumé",
    "href": "intro.html#résumé",
    "title": "Le package Tabloid",
    "section": "Résumé",
    "text": "Résumé\n\n\n\n\n\nFontaine, Maëlle, et Laurette Cretin. 2024. tabloid: Creation De Tableaux Croises. https://inseefrlab.github.io/tabloid/.",
    "crumbs": [
      "Le package Tabloid"
    ]
  },
  {
    "objectID": "exemples.html",
    "href": "exemples.html",
    "title": "Réaliser un tableau",
    "section": "",
    "text": "Chargement des packages et des données\nNous aurons besoin des packages tabloid et dplyr pour le traitement des données (voir Wickham et al. (2023)).\nlibrary('dplyr')\nlibrary('tabloid')\ngrandile &lt;- readRDS('donnees/grandile.rds')\nglimpse(grandile)\nRows: 5,418\nColumns: 10\n$ IDENT      &lt;chr&gt; \"G0001\", \"G0002\", \"G0003\", \"G0004\", \"G0005\", \"G0006\", \"G000…\n$ MODCOHA    &lt;chr&gt; \"4 - Couple sans enfant\", \"1 - Ménage d'une personne\", \"1 -…\n$ NBPERS     &lt;int&gt; 2, 1, 1, 2, 4, 2, 6, 4, 2, 3, 2, 2, 1, 1, 2, 3, 1, 4, 2, 4,…\n$ NBPIECES   &lt;int&gt; 4, 3, 1, 2, 5, 3, 4, 4, 5, 5, 3, 2, 2, 1, 2, 8, 3, 8, 5, 5,…\n$ AGE        &lt;int&gt; 59, 96, 41, 74, 38, 43, 67, 34, 53, 29, 33, 86, 69, 91, 59,…\n$ DIPL       &lt;chr&gt; \"2 - BEPC, brevet des collèges\", \"6 - Diplôme universitaire…\n$ PCS        &lt;chr&gt; \"5 - Employés\", \"7 - Inactifs ayant déjà travaillé\", \"4 - P…\n$ ACT        &lt;chr&gt; \"4 - Tertiaire\", \"0 - Sans activité\", \"2 - Industrie\", \"0 -…\n$ REVENU     &lt;int&gt; 38062, 14155, 78049, 21418, 83738, 35527, 38543, 56133, 610…\n$ PATRIMOINE &lt;int&gt; 569054, 412947, 1848967, 403576, 2138502, 991147, 745235, 6…",
    "crumbs": [
      "Réaliser un tableau"
    ]
  },
  {
    "objectID": "exemples.html#réaliser-un-tri-à-plat",
    "href": "exemples.html#réaliser-un-tri-à-plat",
    "title": "Réaliser un tableau",
    "section": "Réaliser un tri à plat",
    "text": "Réaliser un tri à plat\nLe package tabloid fournit un ensemble de fonctions utiles à la réalisation de tableaux statistiques. La première fonction à employer est tab_build().\n\n\n\n\n\n\nLa fonction tab_build()\n\n\n\nLes paramètres:\n\nvar_rows: les variables de comptage ventilée en lignes,\nvar_cols: les variables de comptage ventilée en colonnes,\nvar_stat: la variable de comptage,\nstat: la statistique à utiliser (par défaut “count”):\n\n“mean” : moyenne,\n“min” : minimum,\n“max” : maximum,\n“median” : médiane,\n“sum” : somme,\n“quantile” : quantile,\n“weighted_mean” : moyenne pondérée,\n“weighted_sum” : somme pondérée\n\nvar_w: la variable de pondération,\nprobs: quantile à calculer si stat est “quantile”,\nlab_total: Le texte pour la marge (par défaut “Ensemble”)\n\n\n\nOn réalise un tri à plat sur la variable MODCOHA.\n\n\n\ntab1 &lt;- grandile %&gt;% \n  tab_build(var_rows = MODCOHA)\ntab1\n\n# A tibble: 6 × 2\n  MODCOHA                   count\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 4 - Couple sans enfant     1393\n2 1 - Ménage d'une personne  1766\n3 2 - Couple avec enfant(s)  1533\n4 5 - Autres                  303\n5 3 - Famille monoparentale   423\n6 Ensemble                   5418\n\n\n\nTable 1: Répartition des ménages de Grandile selon le mode de cohabitation\n\n\n\n\n\n\n\n\n\nOrdre des modalités\n\n\n\nOn remarque que les modalités ne s’affichent pas dans l’ordre alphanumérique croissant. Il faut trier la table au préalable:\n\n\n\ntab1 &lt;- grandile %&gt;% \n  arrange(MODCOHA) %&gt;% \n  tab_build(var_rows = MODCOHA)\ntab1\n\n# A tibble: 6 × 2\n  MODCOHA                   count\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 1 - Ménage d'une personne  1766\n2 2 - Couple avec enfant(s)  1533\n3 3 - Famille monoparentale   423\n4 4 - Couple sans enfant     1393\n5 5 - Autres                  303\n6 Ensemble                   5418\n\n\n\nTable 2: Répartition des ménages de Grandile selon le mode de cohabitation\n\n\n\n\n\n\nProfil colonne\nLa fonction tab_pct() calcule les profils lignes ou colonnes.\n\n\n\nPour un profil ligne\n#| label: exemple-tabpct1\ntab %&gt;%\n  tab_pct(\n    pct = \"row\"\n  )\n\n\nPour un profil colonne\n#| label: exemple-tabpct1\ntab %&gt;%\n  tab_pct(\n    pct = \"col\"\n  )\n\n\n\nTransformons notre tableau de comptage en calculant les parts de chaque modalités dans la population de Grandile:\n\n\n\ntab1b &lt;- tab1 %&gt;% \n  tab_pct(\n    pct = \"col\"\n  )\ntab1b\n\n# A tibble: 6 × 2\n  MODCOHA                    count\n  &lt;chr&gt;                      &lt;dbl&gt;\n1 1 - Ménage d'une personne  32.6 \n2 2 - Couple avec enfant(s)  28.3 \n3 3 - Famille monoparentale   7.81\n4 4 - Couple sans enfant     25.7 \n5 5 - Autres                  5.59\n6 Ensemble                  100   \n\n\n\nTable 3: Répartition des ménages de Grandile selon le mode de cohabitation\n\n\n\n\n\nAffichage d’arrondis\nLa fonction tab_round() permet d’arrondir les données des cellules, et éventuellement de gérer la cohérence des sommes à 100 % pour les pourcentages lignes et colonnes, en proposant différentes règles de décision.\n\n\n\n\n\n\nMise en garde\n\n\n\ntab_round(\n  tab,\n  n = 0,\n  guarantee_100 = FALSE,\n  option = \"lowest_lie\",\n  verbose = FALSE\n)\n\nn: indique le nombre de décimales à afficher\nguarantee_100: gère la cohérence des arrondis\noption: comment la garantie à 100 va être supportée\nverbose: affiche dans la console des informations sur le traitement\n\n\n\nArrondissons le tableau précédent à une décimale:\n\n\n\ntab1c &lt;- tab1b %&gt;% \n  tab_round(\n    n = 1\n  ) \ntab1c\n\n# A tibble: 6 × 2\n  MODCOHA                   count\n* &lt;chr&gt;                     &lt;dbl&gt;\n1 1 - Ménage d'une personne  32.6\n2 2 - Couple avec enfant(s)  28.3\n3 3 - Famille monoparentale   7.8\n4 4 - Couple sans enfant     25.7\n5 5 - Autres                  5.6\n6 Ensemble                  100  \n\n\n\nTable 4: Répartition des ménages de Grandile selon le mode de cohabitation\n\n\n\n\n\n\n\n\n\nAstuce\n\n\n\nLa console n’affiche pas toutes les décimales, par exemple:\n\ntab1b %&gt;% \n  tab_round(\n    n = 3\n  ) \n\n# A tibble: 6 × 2\n  MODCOHA                    count\n* &lt;chr&gt;                      &lt;dbl&gt;\n1 1 - Ménage d'une personne  32.6 \n2 2 - Couple avec enfant(s)  28.3 \n3 3 - Famille monoparentale   7.81\n4 4 - Couple sans enfant     25.7 \n5 5 - Autres                  5.59\n6 Ensemble                  100   \n\n\nIl faut préciser le nombre de chiffres affichés (par exemple 7) grâce à la commande pillar::pillar_options() (voir Müller et Wickham (2024)). La commande options(old) permet de revenir au paramétrage initial.\n\nold &lt;- options(pillar.sigfig = 7)\n\ntab1b %&gt;% \n  tab_round(\n    n = 3,\n    guarantee_100 = FALSE\n  ) \n\n# A tibble: 6 × 2\n  MODCOHA                     count\n* &lt;chr&gt;                       &lt;dbl&gt;\n1 1 - Ménage d'une personne  32.595\n2 2 - Couple avec enfant(s)  28.295\n3 3 - Famille monoparentale   7.807\n4 4 - Couple sans enfant     25.711\n5 5 - Autres                  5.592\n6 Ensemble                  100    \n\noptions(old)\n\n\n\n\n\nMasquer des cellules\nLa fonction tab_mask() permet de masquer les cellules d’un tableau : - les cellules non-nulles inférieures à un seuil, en nombre de lignes ou en somme de la variable var_stat - les cellules correspondant aux marges\ntab_mask(\n  tab,\n  threshold_count = NULL,\n  threshold_sum = NULL,\n  mask_total = \"\",\n  verbose = TRUE\n)\n\nthreshold_count: nombre de lignes de la table initiale en-deça duquel la valeur est masquée (exclusif)\nthreshold_sum: à renseigner pour stat = sum, valeur de la cellule en-deça de laquelle la valeur est masquée (exclusif)\nmask_total: masquage ou non des totaux:\n\n“cols” : masquage des totaux en colonnes\n“rows” : masquage des totaux en lignes\nc(“rows”, “cols”) : masquage de l’ensemble des totaux\n\nverbose: affichage ou non du nombre de cellules masquées par la fonction\n\nMasquons les modalités comprenant moins de 500 individus, sans masquer le total:\n\n\n\ntab1 %&gt;% \n  tab_mask(\n    threshold_count = 500\n  )\n\n# A tibble: 6 × 2\n  MODCOHA                   count\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 1 - Ménage d'une personne  1766\n2 2 - Couple avec enfant(s)  1533\n3 3 - Famille monoparentale    NA\n4 4 - Couple sans enfant     1393\n5 5 - Autres                   NA\n6 Ensemble                   5418\n\n\n\nTable 5: Répartition des ménages de Grandile selon le mode de cohabitation\n\n\n\n\n\nExporter un tableau\nLe package présente deux options pour exporter les tableaux générés.\n\nExport vers Calc\nLa fonction tab_xlsx() permet d’enregistrer le tableau mis en forme dans un fichier .xlsx.\ntab_xlsx(\n  tab,\n  path,\n  sheet,\n  title = \"\",\n  note = \"\",\n  lab_rows = NULL,\n  lab_cols = NULL,\n  open_wb = TRUE,\n  update = TRUE\n)\n\npath: chemin dans lequel exporter le tableau\nsheet: nom de l’onglet dans le classeur - si l’onglet existe déjà, il sera mis à jour avec update = TRUE\ntitle: titre\nnote: note de bas de page\nlab_rows: nouveaux libellés pour les variables lignes\nlab_cols: nouveaux libellés pour les modalités des variables colonnes\nopen_wb: ouverture du classeur crée pour visualisation\nupdate: mise à jour de l’onglet s’il existe déjà dans le classeur (attention, par défaut: TRUE ce qui écrasera les versions existantes)\n\nExportons notre tableau dans un sous répertoire. Donnons lui un titre, une source et modifions le nom de la variable MODCOHA en Mode de cohabitation.\n\nif(!dir.exists(\"_sorties\")){dir.create(\"_sorties\")}\n\ntab1c %&gt;% \n  tab_xlsx(\n    path = \"_sorties/tableaux.xlsx\", \n    sheet = \"MODCOHA\",\n    title = \"Répartition des ménages de Grandile selon le mode de cohabitation\",\n    note = \"Source: Cefil 2025\",\n    lab_rows = \"Mode de cohabitation\"\n    )\n\nLe résultat:\n #### Document Quarto Il suffit d’inclure la fonction tab_render() à la suite de la production du tableau dans un chunk. Par exemple, le tri à plat des ménages de Grandile par mode de cohabitation.\n\ntab1 %&gt;% \n  rename(Effectif = count) %&gt;% \n  left_join(\n  tab1b %&gt;% \n    tab_round(\n      n = 1\n    ) %&gt;% \n    rename('Part (en %)' = count)\n  ) %&gt;% \n  tab_render(\n    title = \"Répartition des ménages de Grandile selon le mode de cohabitation\",\n    note= \"Source: Cefil 2025\",\n    lab_rows = \"Mode de cohabitation\"\n  )\n\n\nRépartition des ménages de Grandile selon le mode de cohabitation\n\n\nMode de cohabitation\nEffectif\nPart (en %)\n\n\n\n\n1 - Ménage d'une personne\n1 766\n32,6\n\n\n2 - Couple avec enfant(s)\n1 533\n28,3\n\n\n3 - Famille monoparentale\n423\n7,8\n\n\n4 - Couple sans enfant\n1 393\n25,7\n\n\n5 - Autres\n303\n5,6\n\n\nEnsemble\n5 418\n100,0\n\n\n\n Source: Cefil 2025",
    "crumbs": [
      "Réaliser un tableau"
    ]
  },
  {
    "objectID": "exemples.html#tableaux-de-contingence",
    "href": "exemples.html#tableaux-de-contingence",
    "title": "Réaliser un tableau",
    "section": "Tableaux de contingence",
    "text": "Tableaux de contingence\nUne table de contingence est un moyen pour présenter simultanément et de manière croisée deux données statistiques. Elle permet d’estimer la dépendance et la relation entre deux caractères observés sur une même population. Le tableau à double entrée est utilisé pour rassembler les effectifs partiels.\n\nCroisement entre le diplôme et la PCS\n\n\n\ntab2 &lt;- grandile %&gt;% \n  arrange(DIPL, PCS) %&gt;% \n  tab_build(\n    var_rows = DIPL,\n    var_cols = PCS\n  )\n\ntab2\n\n# A tibble: 8 × 10\n  DIPL      1 - Agriculteurs exp…¹ 2 - Artisans, commer…² 3 - Cadres, professi…³\n  &lt;chr&gt;                      &lt;dbl&gt;                  &lt;dbl&gt;                  &lt;dbl&gt;\n1 \"0 - Auc…                     28                     39                      3\n2 \"1 - Cer…                     10                     25                     13\n3 \"2 - BEP…                     19                     17                     11\n4 \"3 - CAP…                     19                     84                     35\n5 \"4 - Bac…                      7                     41                     65\n6 \"5 - Dip…                      3                     37                    108\n7 \"6 - Dip…                      1                     28                    285\n8 \"Ensembl…                     87                    271                    520\n# ℹ abbreviated names: ¹​`1 - Agriculteurs exploitants`,\n#   ²​`2 - Artisans, commerçants, chefs d'entreprise`,\n#   ³​`3 - Cadres, professions intellectuelles supérieures`\n# ℹ 6 more variables: `4 - Professions intermédiaires` &lt;dbl&gt;,\n#   `5 - Employés` &lt;dbl&gt;, `6 - Ouvriers` &lt;dbl&gt;,\n#   `7 - Inactifs ayant déjà travaillé` &lt;dbl&gt;,\n#   `8 - Autres sans activité professionnelle` &lt;dbl&gt;, Ensemble &lt;dbl&gt;\n\n\n\nTable 6: Croisement entre le diplôme et la PCS de la personne de référence des ménages de Grandile\n\n\n\net leur profil ligne, permettant de voir les surreprésentations des diplômés dans les PCS.\n\ntab2b &lt;- tab2 %&gt;% \n  tab_pct(pct = \"row\") %&gt;% \n  tab_round(n = 1) \n\ntab2b %&gt;% \n  tab_render()\n\n\n\n\n\n\n\nDIPL\n1 - Agriculteurs exploitants\n2 - Artisans, commerçants, chefs d'entreprise\n3 - Cadres, professions intellectuelles supérieures\n4 - Professions intermédiaires\n5 - Employés\n6 - Ouvriers\n7 - Inactifs ayant déjà travaillé\n8 - Autres sans activité professionnelle\nEnsemble\n\n\n\n\n0 - Aucun diplôme\n2,6\n3,6\n0,3\n3,5\n5,6\n14,7\n61,5\n8,2\n100\n\n\n1 - Certificat d'études primaires\n1,7\n4,2\n2,2\n8,1\n8,1\n13,1\n52,9\n9,7\n100\n\n\n2 - BEPC, brevet des collèges\n3,6\n3,2\n2,1\n11,3\n12,3\n43,0\n16,0\n8,5\n100\n\n\n3 - CAP, BEP\n1,6\n7,0\n2,9\n8,5\n19,1\n31,0\n22,7\n7,3\n100\n\n\n4 - Baccalauréat général, technologique ou professionnel\n0,8\n4,8\n7,6\n35,4\n13,2\n15,6\n11,3\n11,2\n100\n\n\n5 - Diplôme universitaire de 1er cycle, BTS, DUT\n0,5\n6,7\n19,5\n19,5\n11,6\n9,4\n20,8\n11,9\n100\n\n\n6 - Diplôme universitaire de 2ème ou 3ème cycle\n0,2\n4,6\n47,0\n17,5\n6,9\n4,6\n13,2\n5,9\n100\n\n\nEnsemble\n1,6\n5,0\n9,6\n14,1\n11,5\n19,4\n30,0\n8,8\n100\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 7: Croisement entre le diplôme et la PCS de la personne de référence des ménages de Grandile",
    "crumbs": [
      "Réaliser un tableau"
    ]
  },
  {
    "objectID": "exemples.html#tableaux-dindicateurs-statistiques",
    "href": "exemples.html#tableaux-dindicateurs-statistiques",
    "title": "Réaliser un tableau",
    "section": "Tableaux d’indicateurs statistiques",
    "text": "Tableaux d’indicateurs statistiques\n\nTableaux de cumuls\nCalculons le nombre total de personnes, d’après la variable NBPERS, selon la PCS de la personne de référence du ménage.\n\ntab3 &lt;- grandile %&gt;% \n  arrange(PCS) %&gt;% \n  tab_build(var_rows = PCS,\n            var_stat = NBPERS,\n            stat = \"mean\")\ntab3 %&gt;% \n  tab_render()\n\n\n\n\n\n\n\nPCS\nmean\n\n\n\n\n1 - Agriculteurs exploitants\n2,540230\n\n\n2 - Artisans, commerçants, chefs d'entreprise\n2,546125\n\n\n3 - Cadres, professions intellectuelles supérieures\n2,584615\n\n\n4 - Professions intermédiaires\n2,540576\n\n\n5 - Employés\n2,584270\n\n\n6 - Ouvriers\n2,571836\n\n\n7 - Inactifs ayant déjà travaillé\n1,977846\n\n\n8 - Autres sans activité professionnelle\n1,874214\n\n\nEnsemble\n2,328719\n\n\n\n\n\n\n\n\n\n\n\n\nTable 8\n\n\n\n\n\n\nTableaux de moyennes\nCalculons le revenu moyen des habitants, d’après la variable REVENU, selon la PCS de la personne de référence du ménage. On doit pondérer par le nombre de personnes composant le ménage.\n\ntab4 &lt;- grandile %&gt;% \n  arrange(PCS) %&gt;% \n  tab_build(\n    var_rows = PCS,\n    var_stat = REVENU,\n    var_w = NBPERS,\n    stat = \"weighted_mean\"\n  )\ntab4 %&gt;% \n  tab_render()\n\n\n\n\n\n\n\nPCS\nweighted_mean\n\n\n\n\n1 - Agriculteurs exploitants\n47 374,71\n\n\n2 - Artisans, commerçants, chefs d'entreprise\n132 373,37\n\n\n3 - Cadres, professions intellectuelles supérieures\n121 288,38\n\n\n4 - Professions intermédiaires\n62 621,47\n\n\n5 - Employés\n36 698,46\n\n\n6 - Ouvriers\n44 142,00\n\n\n7 - Inactifs ayant déjà travaillé\n19 349,94\n\n\n8 - Autres sans activité professionnelle\n14 634,00\n\n\nEnsemble\n50 728,47\n\n\n\n\n\n\n\n\n\n\n\n\nTable 9",
    "crumbs": [
      "Réaliser un tableau"
    ]
  },
  {
    "objectID": "exemples.html#tableaux-en-évolution",
    "href": "exemples.html#tableaux-en-évolution",
    "title": "Réaliser un tableau",
    "section": "Tableaux en évolution",
    "text": "Tableaux en évolution\n\nUne seule variable d’interêt\nNous allons réaliser un tableau des populations des pays d’Europe de l’Ouest (région “Western Europe”) en 1990 et 2010 à partir des données de Gapminder (voir Bryan (2023)).\nTout d’abord chargeons le jeu de données.\n\ngapminder &lt;- readRDS('donnees/gapminder.rds')\n                     \nglimpse(gapminder)\n\n\n\nRows: 10,545\nColumns: 9\n$ country          &lt;chr&gt; \"Albania\", \"Algeria\", \"Angola\", \"Antigua and Barbuda\"…\n$ year             &lt;dbl&gt; 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960, 1960,…\n$ infant_mortality &lt;dbl&gt; 115.40, 148.20, 208.00, NA, 59.87, NA, NA, 20.30, 37.…\n$ life_expectancy  &lt;dbl&gt; 62.87, 47.50, 35.98, 62.97, 65.39, 66.86, 65.66, 70.8…\n$ fertility        &lt;dbl&gt; 6.19, 7.65, 7.32, 4.43, 3.11, 4.55, 4.82, 3.45, 2.70,…\n$ population       &lt;dbl&gt; 1636054, 11124892, 5270844, 54681, 20619075, 1867396,…\n$ gdp              &lt;dbl&gt; NA, 13828152297, NA, NA, 108322326649, NA, NA, 966778…\n$ continent        &lt;chr&gt; \"Europe\", \"Africa\", \"Africa\", \"Americas\", \"Americas\",…\n$ region           &lt;chr&gt; \"Southern Europe\", \"Northern Africa\", \"Middle Africa\"…\n\n\nConstruisons le tableau et affichons le:\n\ntab5 &lt;- gapminder %&gt;% \n  filter(year %in% c(1990, 2010), region == \"Western Europe\") %&gt;% \n  mutate(year = as.character(year)) %&gt;% \n  arrange(country) %&gt;% \n  tab_build(\n    var_rows = country,\n    var_cols = year,\n    var_stat = population,\n    stat = \"sum\") \n\ntab5\n\n# A tibble: 8 × 4\n  country        `1990`    `2010`  Ensemble\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 Austria       7706571   8391986  16098557\n2 Belgium       9978241  10929978  20908219\n3 France       56943299  62961136 119904435\n4 Germany      78958237  80435307 159393544\n5 Luxembourg     381787    507889    889676\n6 Netherlands  14915139  16631571  31546710\n7 Switzerland   6673920   7830534  14504454\n8 Ensemble    175557194 187688401 363245595\n\n\nNous disposons de la marge en colonne, qui n’a pas de sens pour une série chronologique. Heureusement, l’objet tab5 peut être modifié, car c’est un tibble !\n\ntab5 &lt;- tab5 %&gt;% \n  select(-Ensemble)\n\ntab5\n\n# A tibble: 8 × 3\n  country        `1990`    `2010`\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1 Austria       7706571   8391986\n2 Belgium       9978241  10929978\n3 France       56943299  62961136\n4 Germany      78958237  80435307\n5 Luxembourg     381787    507889\n6 Netherlands  14915139  16631571\n7 Switzerland   6673920   7830534\n8 Ensemble    175557194 187688401\n\n\nC’est mieux, nous allons pouvoir effectuer un rendu dans le document:\n\ntab5 %&gt;% \n  tab_render(\n    title = \"Évolution de la population des pays d'Europe de l'Ouest entre 1990 et 2010\",\n    note = \"Source: Gapminder\",\n    lab_rows = \"Pays\"\n  )\n\n\n\n\n\nÉvolution de la population des pays d'Europe de l'Ouest entre 1990 et 2010\n\n\nPays\n1990\n2010\n\n\n\n\nAustria\n7 706 571\n8 391 986\n\n\nBelgium\n9 978 241\n10 929 978\n\n\nFrance\n56 943 299\n62 961 136\n\n\nGermany\n78 958 237\n80 435 307\n\n\nLuxembourg\n381 787\n507 889\n\n\nNetherlands\n14 915 139\n16 631 571\n\n\nSwitzerland\n6 673 920\n7 830 534\n\n\nEnsemble\n175 557 194\n187 688 401\n\n\n\n Source: Gapminder\n\n\n\n\n\n\n\n\n\nTable 10: Évolution de la population des pays d'Europe de l'Ouest entre 1990 et 2010\n\n\n\n\n\n\n\n\n\n\nVariables quantitatives\n\n\n\nVous aurez remarqué que nous avons transformé la variable year en variable catégorielle à l’aide de as.character(). En effet, tabloid ne permet pas de ventiler les individus selon des modalités quantitatives.\n\n\n\n\nDeux variables d’interêt\nCe tableau affichera l’évolution du PIB (variable gdp) et du nombre d’habitants dans les pays de la région “Western Europe” en 1990 et en 2010.\nOn ne peut pas préciser plusieurs variables au paramètre var_stat =. On doit donc représenter une seule variable qui prendra plusieurs modalités. Par exemple une variable indic dont les valeurs seront dans une variable val qui sera la variable d’intérêt de tabloid.\nCommençons par préparer les données à l’aide du package tidyr (voir Wickham, Vaughan, et Girlich (2024)).\n\nlibrary('tidyr')\n\ndatatab6 &lt;- gapminder %&gt;% \n  tidyr::pivot_longer(cols = c(gdp, population), names_to = \"indic\", values_to = \"val\") %&gt;% \n  filter(year %in% c(1990, 2010), region == \"Western Europe\") %&gt;% \n  mutate(year = as.character(year)) %&gt;% \n  arrange(country)\n\n\nlibrary('tidyr')\n\ndatatab6 &lt;- gapminder %&gt;% \n  filter(year %in% c(1990, 2010), region == \"Western Europe\") %&gt;% \n  tidyr::pivot_longer(cols = c(gdp, population), names_to = \"indic\", values_to = \"val\") %&gt;% \n  mutate(year = as.character(year)) %&gt;% \n  arrange(country)\n\nLa fonction pivot_longer() transforme les données (plus exactement les colonnes gdp et population) ce qui nous sera utile lorsque l’on voudra utiliser tabloid. En effet, dans le code ci-dessous, vous remarquez que si les pays (classés par ordre alphabétique) sont en lignes (paramètre var_rows =), les colonnes prennent comme variable l’année (year) et l’indicateur (gdp ou population) transformé en longueur par pivot_longer(). On n’oubliera pas d’enlever toutes les colonnes dont le nom termine par “Ensemble”.\n\ntab6 &lt;- datatab6 %&gt;% \n  tab_build(\n    var_rows = country,\n    var_cols = c(year, indic),\n    var_stat = val,\n    stat = \"sum\") %&gt;% \n  select(-ends_with(\"Ensemble\"))\n\ntab6\n\n# A tibble: 8 × 5\n  country        `1990_gdp` `1990_population`    `2010_gdp` `2010_population`\n  &lt;chr&gt;               &lt;dbl&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;\n1 Austria      147353847860           7706571  223954137424           8391986\n2 Belgium      186769011525           9978241  267143096398          10929978\n3 France      1091598599817          56943299 1480999829195          62961136\n4 Germany     1556954345661          78958237 2069464070055          80435307\n5 Luxembourg    12401289199            381787   26516904700            507889\n6 Netherlands  281955594047          14915139  441185443862          16631571\n7 Switzerland  224773355504           6673920  294748691280           7830534\n8 Ensemble    3501806043613         175557194 4804012172914         187688401\n\n\nOn effectue un rendu du tableau:\n\ntab6 %&gt;% \n  tab_render(\n    title = \"Évolution de la population et du PIB des pays d'Europe de l'Ouest entre 1990 et 2010\",\n    note = \"Source: Gapminder\",\n    lab_rows = \"Pays\",\n    lab_cols = list(indic = c(\"PIB\", \"Population\"))\n  )\n\n\n\n\n\nÉvolution de la population et du PIB des pays d'Europe de l'Ouest entre 1990 et 2010\n\n\n\n\n\n\n\n\n\n\n\n1990\n\n\n2010\n\n\n\nPays\nPIB\nPopulation\nPIB\nPopulation\n\n\n\n\nAustria\n147 353 847 860\n7 706 571\n223 954 137 424\n8 391 986\n\n\nBelgium\n186 769 011 525\n9 978 241\n267 143 096 398\n10 929 978\n\n\nFrance\n1 091 598 599 817\n56 943 299\n1 480 999 829 195\n62 961 136\n\n\nGermany\n1 556 954 345 661\n78 958 237\n2 069 464 070 055\n80 435 307\n\n\nLuxembourg\n12 401 289 199\n381 787\n26 516 904 700\n507 889\n\n\nNetherlands\n281 955 594 047\n14 915 139\n441 185 443 862\n16 631 571\n\n\nSwitzerland\n224 773 355 504\n6 673 920\n294 748 691 280\n7 830 534\n\n\nEnsemble\n3 501 806 043 613\n175 557 194\n4 804 012 172 914\n187 688 401\n\n\n\n Source: Gapminder\n\n\n\n\n\n\n\n\n\n\n\nTable 11: Évolution de la population et du PIB des pays d'Europe de l'Ouest entre 1990 et 2010\n\n\n\n\n\n\nSérie chronologique\nConstruisons un tableau des évolutions de l’espérance de vie (variable life_expectancy) entre 2000 et 2010. Pour construire la marge, nous calculerons la moyenne pondérée selon la population du pays.\n\ntab7 &lt;- gapminder %&gt;%\n  filter(year %in% 2000:2010, region == \"South America\") %&gt;% \n  mutate(year = as.character(year)) %&gt;% \n  arrange(country) %&gt;% \n  tab_build(\n    var_rows = country, \n    var_cols = year, \n    var_stat = life_expectancy, \n    stat = \"weighted_mean\", \n    var_w = population)\ntab7\n\n# A tibble: 13 × 13\n   country `2000` `2001` `2002` `2003` `2004` `2005` `2006` `2007` `2008` `2009`\n   &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Argent…   74.2   74.3   74.3   74.5   75     75.3   75.3   75.2   75.4   75.6\n 2 Bolivia   67.6   68.3   68.7   69.3   69.8   70.2   70.6   70.9   71.2   71.6\n 3 Brazil    70.7   71.1   71.4   71.7   72     72.4   72.7   73     73.2   73.4\n 4 Chile     77.3   77.4   77.7   77.8   78     78.2   78.2   78.3   78.5   78.5\n 5 Colomb…   73.3   73.5   73.7   74.5   74.7   75.1   75.3   75.9   76.2   76.2\n 6 Ecuador   73.2   73.4   73.6   73.7   73.9   74.1   74.3   74.5   74.7   74.9\n 7 Guyana    64.2   63.9   63.5   63.7   64.2   64.4   64.8   64.9   65     65.3\n 8 Paragu…   74.2   74.2   74.1   74.1   73.8   74     74     74     74     74  \n 9 Peru      74.6   75.2   75.7   76.2   76.7   77.2   77.7   77.9   78.2   78.2\n10 Surina…   69.7   69.5   69.4   69.5   69.7   69.9   70     70.1   70.2   70.5\n11 Uruguay   74.6   74.8   75     75     75.3   75.5   75.7   75.7   76     76.2\n12 Venezu…   73.8   73.8   73.8   73.5   74.3   74.6   74.5   74.4   74.2   74.4\n13 Ensemb…   72.3   72.6   72.8   73.1   73.4   73.8   74.0   74.3   74.5   74.6\n# ℹ 2 more variables: `2010` &lt;dbl&gt;, Ensemble &lt;dbl&gt;\n\n\nOn arrondit à une décimale et on supprime la colonne Ensemble:\n\ntab7 &lt;- tab7 %&gt;% \n  tab_round(n = 1) %&gt;% \n  select(-ends_with(\"Ensemble\")) \ntab7\n\n# A tibble: 13 × 12\n   country `2000` `2001` `2002` `2003` `2004` `2005` `2006` `2007` `2008` `2009`\n   &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 Argent…   74.2   74.3   74.3   74.5   75     75.3   75.3   75.2   75.4   75.6\n 2 Bolivia   67.6   68.3   68.7   69.3   69.8   70.2   70.6   70.9   71.2   71.6\n 3 Brazil    70.7   71.1   71.4   71.7   72     72.4   72.7   73     73.2   73.4\n 4 Chile     77.3   77.4   77.7   77.8   78     78.2   78.2   78.3   78.5   78.5\n 5 Colomb…   73.3   73.5   73.7   74.5   74.7   75.1   75.3   75.9   76.2   76.2\n 6 Ecuador   73.2   73.4   73.6   73.7   73.9   74.1   74.3   74.5   74.7   74.9\n 7 Guyana    64.2   63.9   63.5   63.7   64.2   64.4   64.8   64.9   65     65.3\n 8 Paragu…   74.2   74.2   74.1   74.1   73.8   74     74     74     74     74  \n 9 Peru      74.6   75.2   75.7   76.2   76.7   77.2   77.7   77.9   78.2   78.2\n10 Surina…   69.7   69.5   69.4   69.5   69.7   69.9   70     70.1   70.2   70.5\n11 Uruguay   74.6   74.8   75     75     75.3   75.5   75.7   75.7   76     76.2\n12 Venezu…   73.8   73.8   73.8   73.5   74.3   74.6   74.5   74.4   74.2   74.4\n13 Ensemb…   72.3   72.6   72.8   73.1   73.4   73.8   74     74.3   74.5   74.6\n# ℹ 1 more variable: `2010` &lt;dbl&gt;\n\n\n\ntab7 %&gt;% \n  tab_render(\n    title = \"Évolution de l'espérance de vie en Amérique du Sud entre 2000 et 2010\",\n    note = \"Source: Gapminder\",\n    lab_rows = \"Pays\"\n  )\n\n\n\n\n\nÉvolution de l'espérance de vie en Amérique du Sud entre 2000 et 2010\n\n\nPays\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n\n\n\n\nArgentina\n74,2\n74,3\n74,3\n74,5\n75,0\n75,3\n75,3\n75,2\n75,4\n75,6\n75,8\n\n\nBolivia\n67,6\n68,3\n68,7\n69,3\n69,8\n70,2\n70,6\n70,9\n71,2\n71,6\n71,8\n\n\nBrazil\n70,7\n71,1\n71,4\n71,7\n72,0\n72,4\n72,7\n73,0\n73,2\n73,4\n73,6\n\n\nChile\n77,3\n77,4\n77,7\n77,8\n78,0\n78,2\n78,2\n78,3\n78,5\n78,5\n78,5\n\n\nColombia\n73,3\n73,5\n73,7\n74,5\n74,7\n75,1\n75,3\n75,9\n76,2\n76,2\n76,4\n\n\nEcuador\n73,2\n73,4\n73,6\n73,7\n73,9\n74,1\n74,3\n74,5\n74,7\n74,9\n75,1\n\n\nGuyana\n64,2\n63,9\n63,5\n63,7\n64,2\n64,4\n64,8\n64,9\n65,0\n65,3\n65,5\n\n\nParaguay\n74,2\n74,2\n74,1\n74,1\n73,8\n74,0\n74,0\n74,0\n74,0\n74,0\n74,0\n\n\nPeru\n74,6\n75,2\n75,7\n76,2\n76,7\n77,2\n77,7\n77,9\n78,2\n78,2\n78,4\n\n\nSuriname\n69,7\n69,5\n69,4\n69,5\n69,7\n69,9\n70,0\n70,1\n70,2\n70,5\n70,7\n\n\nUruguay\n74,6\n74,8\n75,0\n75,0\n75,3\n75,5\n75,7\n75,7\n76,0\n76,2\n76,2\n\n\nVenezuela\n73,8\n73,8\n73,8\n73,5\n74,3\n74,6\n74,5\n74,4\n74,2\n74,4\n74,9\n\n\nEnsemble\n72,3\n72,6\n72,8\n73,1\n73,4\n73,8\n74,0\n74,3\n74,5\n74,6\n74,8\n\n\n\n Source: Gapminder\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 12: Évolution de l'espérance de vie en Amérique du Sud entre 2000 et 2010\n\n\n\n\n\n\n\n\n\n\nSupprimer la ligne Ensemble\n\n\n\nCette marge régionale pose problème. En effet, l’hypothèse retenue est trop forte, il faudrait calculer l’espérance de vie de cet ensemble de pays en reprenant les structures de mortalité et en les agrégeant. On va supprimer cette ligne:\n\ntab7 &lt;- tab7 %&gt;% \n  filter(country != \"Ensemble\")\n\ntab7 %&gt;% \n  tab_render(\n    title = \"Évolution de l'espérance de vie en Amérique du Sud entre 2000 et 2010\",\n    note = \"Source: Gapminder\",\n    lab_rows = \"Pays\"\n  )\n\n\nÉvolution de l'espérance de vie en Amérique du Sud entre 2000 et 2010\n\n\nPays\n2000\n2001\n2002\n2003\n2004\n2005\n2006\n2007\n2008\n2009\n2010\n\n\n\n\nArgentina\n74,2\n74,3\n74,3\n74,5\n75,0\n75,3\n75,3\n75,2\n75,4\n75,6\n75,8\n\n\nBolivia\n67,6\n68,3\n68,7\n69,3\n69,8\n70,2\n70,6\n70,9\n71,2\n71,6\n71,8\n\n\nBrazil\n70,7\n71,1\n71,4\n71,7\n72,0\n72,4\n72,7\n73,0\n73,2\n73,4\n73,6\n\n\nChile\n77,3\n77,4\n77,7\n77,8\n78,0\n78,2\n78,2\n78,3\n78,5\n78,5\n78,5\n\n\nColombia\n73,3\n73,5\n73,7\n74,5\n74,7\n75,1\n75,3\n75,9\n76,2\n76,2\n76,4\n\n\nEcuador\n73,2\n73,4\n73,6\n73,7\n73,9\n74,1\n74,3\n74,5\n74,7\n74,9\n75,1\n\n\nGuyana\n64,2\n63,9\n63,5\n63,7\n64,2\n64,4\n64,8\n64,9\n65,0\n65,3\n65,5\n\n\nParaguay\n74,2\n74,2\n74,1\n74,1\n73,8\n74,0\n74,0\n74,0\n74,0\n74,0\n74,0\n\n\nPeru\n74,6\n75,2\n75,7\n76,2\n76,7\n77,2\n77,7\n77,9\n78,2\n78,2\n78,4\n\n\nSuriname\n69,7\n69,5\n69,4\n69,5\n69,7\n69,9\n70,0\n70,1\n70,2\n70,5\n70,7\n\n\nUruguay\n74,6\n74,8\n75,0\n75,0\n75,3\n75,5\n75,7\n75,7\n76,0\n76,2\n76,2\n\n\nVenezuela\n73,8\n73,8\n73,8\n73,5\n74,3\n74,6\n74,5\n74,4\n74,2\n74,4\n74,9\n\n\n\n Source: Gapminder",
    "crumbs": [
      "Réaliser un tableau"
    ]
  },
  {
    "objectID": "exemples.html#compléments-sur-la-mise-en-forme",
    "href": "exemples.html#compléments-sur-la-mise-en-forme",
    "title": "Réaliser un tableau",
    "section": "Compléments sur la mise en forme",
    "text": "Compléments sur la mise en forme\n\nUtilisation de kableExtra pour mettre en forme un rendu html\nL’objet généré par la fonction tab_render() étant un kable, on peut le modifier avec kableExtra et formater les cellules, en incluant des conditions, gérer les largeurs de colonnes, les notes de bas de tableau, les renvois, etc …(voir Zhu (2024))\nPar exemple, avec le Table 11 on peut ajouter:\n\nlibrary('kableExtra')\ntab6 %&gt;% \n  tab_render(\n    title = \"Évolution de la population et du PIB des pays d'Europe de l'Ouest entre 1990 et 2010\",\n    note = \"Source: Gapminder\",\n    lab_rows = \"Pays\",\n    lab_cols = list(indic = c(\"PIB\", \"Population\"))\n  ) %&gt;% \n  column_spec(4:5, bold = T,background = \"ivory2\") %&gt;% \n  row_spec(3, bold = TRUE, italic = TRUE, color = \"white\", background = \"steelblue1\")%&gt;% \n  row_spec(4, color = \"tan3\") \n\n\nÉvolution de la population et du PIB des pays d'Europe de l'Ouest entre 1990 et 2010\n\n\n\n\n\n\n\n\n\n\n\n1990\n\n\n2010\n\n\n\nPays\nPIB\nPopulation\nPIB\nPopulation\n\n\n\n\nAustria\n147 353 847 860\n7 706 571\n223 954 137 424\n8 391 986\n\n\nBelgium\n186 769 011 525\n9 978 241\n267 143 096 398\n10 929 978\n\n\nFrance\n1 091 598 599 817\n56 943 299\n1 480 999 829 195\n62 961 136\n\n\nGermany\n1 556 954 345 661\n78 958 237\n2 069 464 070 055\n80 435 307\n\n\nLuxembourg\n12 401 289 199\n381 787\n26 516 904 700\n507 889\n\n\nNetherlands\n281 955 594 047\n14 915 139\n441 185 443 862\n16 631 571\n\n\nSwitzerland\n224 773 355 504\n6 673 920\n294 748 691 280\n7 830 534\n\n\nEnsemble\n3 501 806 043 613\n175 557 194\n4 804 012 172 914\n187 688 401\n\n\n\n Source: Gapminder\n\n\n\n\n\n\n\n\n\n\n\n\nUtiliser gt() plutôt que tab_render()\nOn peut préférer gt (voir Iannone et al. (2025)) pour générer les rendus de tableaux, et ne conserver que la partie computationnelle de tabloid.\n\nlibrary('gt')\n\n\ntab5 %&gt;% \n  gt() %&gt;% \n  fmt_number(locale = \"fr\", decimals = 0) %&gt;% \n  cols_label(\n    country = \"Pays\"\n  ) %&gt;% \n  tab_header(\n    title = \"Évolution de la population des pays d'Europe de l'Ouest entre 1990 et 2010\"\n  ) %&gt;% \n  tab_source_note(\n    source_note = \"Source: Gapminder\"\n  ) %&gt;%  \n  tab_style(style = list(cell_fill(color = \"lightgrey\"), cell_text(weight = \"bold\")), \n            locations =list(cells_body(columns = \"2010\"), cells_body(rows = country == \"Ensemble\")))\n\n\n\n\n\n\n\nÉvolution de la population des pays d'Europe de l'Ouest entre 1990 et 2010\n\n\nPays\n1990\n2010\n\n\n\n\nAustria\n7 706 571\n8 391 986\n\n\nBelgium\n9 978 241\n10 929 978\n\n\nFrance\n56 943 299\n62 961 136\n\n\nGermany\n78 958 237\n80 435 307\n\n\nLuxembourg\n381 787\n507 889\n\n\nNetherlands\n14 915 139\n16 631 571\n\n\nSwitzerland\n6 673 920\n7 830 534\n\n\nEnsemble\n175 557 194\n187 688 401\n\n\n\nSource: Gapminder\n\n\n\n\n\n\n\n\n\n\n\n\nBryan, Jennifer. 2023. gapminder: Data from Gapminder.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, Alexandra Lauer, JooYoung Seo, Ken Brevoort, et Olivier Roy. 2025. gt: Easily Create Presentation-Ready Display Tables. https://gt.rstudio.com.\n\n\nMüller, Kirill, et Hadley Wickham. 2024. Controlling display of numbers. https://tibble.tidyverse.org/articles/numbers.html.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, et Davis Vaughan. 2023. dplyr: A Grammar of Data Manipulation. https://dplyr.tidyverse.org.\n\n\nWickham, Hadley, Davis Vaughan, et Maximilian Girlich. 2024. tidyr: Tidy Messy Data. https://tidyr.tidyverse.org.\n\n\nZhu, Hao. 2024. Construct Complex Table with knitr::kable() + pipe. http://haozhu233.github.io/kableExtra/.",
    "crumbs": [
      "Réaliser un tableau"
    ]
  },
  {
    "objectID": "exercices.html",
    "href": "exercices.html",
    "title": "Exercices",
    "section": "",
    "text": "Exercice 1\nRéalisez un tri à plat de la PCS de la personne de référence des ménages de Grandile en affichant les parts sous forme de pourcentage à une décimale. Titrez et sourcez le tableau au format html.\nSolution\ngrandile %&gt;% \n  arrange(PCS) %&gt;% \n  tab_build(\n    var_rows = PCS\n  ) %&gt;% \n  tab_pct(pct = \"col\") %&gt;% \n  tab_round(n = 1) %&gt;% \n  tab_render(lab_rows = \"PCS de la personne de référence du ménage\",\n             note = \"Source: Cefil\")",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "exercices.html#exercice-2",
    "href": "exercices.html#exercice-2",
    "title": "Exercices",
    "section": "Exercice 2",
    "text": "Exercice 2\nRéalisez un tableau affichant la moyenne des revenus des ménages de Grandile par niveau de diplôme. Vous arrondirez à la centaine d’euros Titrez et sourcez le tableau au format html.\n\n\nSolution\ngrandile %&gt;% \n  arrange(DIPL) %&gt;% \n  tab_build(\n    var_rows = DIPL,\n    var_stat = REVENU,\n    stat = \"mean\"\n  ) %&gt;% \n  tab_round(\n    n=-2\n  ) %&gt;% \n  tab_render(\n    title = \"Revenu moyen par niveau de diplôme des ménages de Grandile\",\n    note = \"Source: Cefil\",\n    lab_rows = \"Niveau de diplôme\")",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "exercices.html#exercice-3",
    "href": "exercices.html#exercice-3",
    "title": "Exercices",
    "section": "Exercice 3",
    "text": "Exercice 3\nConstruisez un tableau de l’âge médian (arrondi à l’entier) des personnes de références des ménages de Grandile selon la PCS.\n\n\nSolution\ngrandile %&gt;% \n  arrange(PCS) %&gt;% \n  tab_build(\n    var_rows = PCS,\n    var_stat = AGE,\n    stat = \"median\"\n  )%&gt;% \n  tab_round(\n    n = 0\n  ) %&gt;% \n  tab_render(\n    title = \"Âge médian des personnes de référence des ménages de Grandile selon la PCS\",\n    note = \"Source: Cefil\")",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "exercices.html#exercice-4",
    "href": "exercices.html#exercice-4",
    "title": "Exercices",
    "section": "Exercice 4",
    "text": "Exercice 4\nRéalisez un tableau de structure (en % arrondi à une décimale) des PCS selon le secteur d’activité des ménages de Grandile. Titrez et Sourcez le rendu html.\n\n\nSolution\ngrandile %&gt;% \n  arrange(PCS, ACT) %&gt;% \n  tab_build(\n    var_rows = PCS,\n    var_cols = ACT,\n    stat = \"count\"\n  ) %&gt;% \n  tab_pct(pct = \"row\") %&gt;% \n  tab_round(\n    n = 1\n  ) %&gt;% \n  tab_render(\n    title = \"PCS selon le Secteur d'activité des ménages de Grandile\",\n    note = \"Source: Cefil\")",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "exercices.html#exercice-5",
    "href": "exercices.html#exercice-5",
    "title": "Exercices",
    "section": "Exercice 5",
    "text": "Exercice 5\nA partir des données de Gapminder, construisez le tableau suivant:\n\n\n\nPIB par continent en Milliards de $\n\n\nContinent\n1960\n1970\n1980\n1990\n2000\n2010\n\n\n\n\nAfrica\n9,7\n15,1\n22,6\n24,6\n30,9\n48,2\n\n\nAmericas\n1 165,4\n1 604,3\n2 087,0\n2 677,2\n3 596,1\n4 151,3\n\n\nAsia\n101,8\n176,4\n264,5\n436,1\n761,8\n1 618,9\n\n\nEurope\n257,7\n519,5\n621,3\n564,9\n654,2\n774,4\n\n\nOceania\n78,8\n127,2\n146,3\n197,1\n267,0\n360,6\n\n\nEnsemble\n292,7\n437,3\n570,0\n717,1\n1 045,5\n1 637,5\n\n\n\n Source: Gapminder\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution\ngapminder %&gt;% \n  mutate(year = as.character(year),\n         gdpM = gdp/1E9) %&gt;% \n  filter(year %in% c(1960, 1970, 1980, 1990, 2000, 2010)) %&gt;% \n  arrange(continent) %&gt;% \n  tab_build(\n    var_rows = continent,\n    var_cols = year,\n    var_stat = gdpM,\n    var_w = population,\n    stat = \"weighted_mean\"\n  ) %&gt;% \n  select(-\"Ensemble\") %&gt;% \n  tab_round(n = 1) %&gt;% \n  tab_render(title = \"PIB par continent en Milliards de $\",\n             note = \"Source: Gapminder\",\n             lab_rows = \"Continent\")",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "exercices.html#exercice-6",
    "href": "exercices.html#exercice-6",
    "title": "Exercices",
    "section": "Exercice 6",
    "text": "Exercice 6\nRéalisez le tableau de moyenne pondérée de votre choix à partir des données des ménages de Grandile.",
    "crumbs": [
      "Exercices"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bryan, Jennifer. 2023. Gapminder: Data from Gapminder.\n\n\nFontaine, Maëlle, and Laurette Cretin. 2024. Tabloid: Creation de\nTableaux Croises. https://inseefrlab.github.io/tabloid/.\n\n\nIannone, Richard, Joe Cheng, Barret Schloerke, Ellis Hughes, Alexandra\nLauer, JooYoung Seo, Ken Brevoort, and Olivier Roy. 2025. Gt: Easily\nCreate Presentation-Ready Display Tables. https://gt.rstudio.com.\n\n\nMüller, Kirill, and Hadley Wickham. 2024. Controlling Display of\nNumbers. https://tibble.tidyverse.org/articles/numbers.html.\n\n\nWickham, Hadley, Romain François, Lionel Henry, Kirill Müller, and Davis\nVaughan. 2023. Dplyr: A Grammar of Data Manipulation. https://dplyr.tidyverse.org.\n\n\nWickham, Hadley, Davis Vaughan, and Maximilian Girlich. 2024. Tidyr:\nTidy Messy Data. https://tidyr.tidyverse.org.\n\n\nZhu, Hao. 2024. Construct Complex Table with Knitr::kable() +\nPipe. http://haozhu233.github.io/kableExtra/.",
    "crumbs": [
      "References"
    ]
  }
]